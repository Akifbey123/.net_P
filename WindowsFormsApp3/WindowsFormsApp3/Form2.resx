<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ThumbnailBox.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6SJcwgAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>